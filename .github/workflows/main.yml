name: MLOps CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - 'data/**'  # Ignore data-only changes
  
  workflow_run:
    workflows: ["Train and Promote Iris Model"]
    types:
      - completed

jobs:
  build-test-deploy:
    if: |
      github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Download mlruns artifact (if triggered by training workflow)
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v3
      with:
        name: mlruns
        path: mlruns/

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . || true

    - name: Build Docker image
      run: docker build -t iris-api .

    - name: Login to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: |
        docker tag iris-api ${{ secrets.DOCKER_USERNAME }}/iris-api:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/iris-api:latest

    - name: Simulated Deployment
      run: |
        echo "Image pushed. Run on any machine with:"
        echo "docker run -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/iris-api:latest"
